FROM ubuntu:16.04
# example: https://gist.github.com/zentetsukenz/5e330b801f983e3d39757686dcb41cc2

# Set correct environment variables.
ENV HOME /root

ENV LANG pt_BR.UTF-8
ENV LANGUAGE pt_BR
ENV LC_CTYPE pt_BR.UTF-8
ENV LC_ALL pt_BR.UTF-8

COPY docker/config/1604_etc_apt_sources.list /etc/apt/sources.list

RUN apt-get update \
### Ubuntu
    && apt-get install -y vim curl language-pack-pt locales wget xzdec \
    && rm -rf /var/lib/apt/lists/* \
    && localedef -i pt_BR -c -f UTF-8 -A /usr/share/locale/locale.alias pt_BR.UTF-8 \
    && apt-get update

#### Ubuntu
RUN apt-get install -y dirmngr gnupg build-essential mysql-client \
    libmysqlclient-dev nodejs imagemagick tzdata netcat
#### Ubuntu

#### Include user app
RUN addgroup --gid 9999 app \
    && adduser --uid 9999 --gid 9999 --disabled-password --gecos "Application" app \
    && usermod -L app \
    && mkdir -p /home/app/.ssh \
    && chmod 700 /home/app/.ssh \
    && chown app:app /home/app/.ssh
#### User app
### Ruby
#RUN apt-get install -ym software-properties-common  \
RUN apt-get install -ym software-properties-common  \
    && apt-get update \
    && apt-add-repository ppa:brightbox/ruby-ng \
    && apt-get update \
    && apt-get install -y ruby2.2 ruby-switch \
    && ruby-switch --set ruby2.2 \
    && gem install bundler \
    && apt-get update
### Ruby

ARG rails_version=4.2.7.1
ENV RAILS_VERSION ${rails_version}

ARG rails_env=development
ENV RAILS_ENV ${rails_env}

ENV APP_DIR '/home/app/railsgirls'

RUN bash -c 'mkdir -p ${APP_DIR}'

USER app

ENV HOME /home/app

WORKDIR ${APP_DIR}

#VOLUME ["${APP_DIR}/public/uploads"]
### app

### GIT
#ARG git_repo="https://github.com/robertosilvino/railsgirls.git"
# git clone https://github.com/robertosilvino/railsgirls.git ${APP_DIR} -b ${APP_BRANCH} --recursive

#git clone https://github.com/UFSC/moodle-tcc.git ${APP_DIR} -b ${APP_BRANCH} --recursive
#RUN git clone ${git_repo} ${APP_DIR} -b ${APP_BRANCH} --recursive

### COPY repository
#COPY . ${APP_DIR}
COPY . .

#RUN cp /run/secrets/database.yml ${APP_DIR}/config/.
#COPY docker/config/staging/app_config.yml.erb ${APP_DIR}/config/
#COPY --chown=app:app docker/config/staging/database.yml ${APP_DIR}/config/
COPY config/database.yml ${APP_DIR}/config/
#COPY docker/config/staging/database.yml.erb ${APP_DIR}/config/
#COPY image/staging/email.yml ${APP_DIR}/config/
#COPY image/staging/secrets.yml ${APP_DIR}/config/

USER root
RUN chown app:app -R ${APP_DIR}

RUN apt-get update
RUN apt-get install -y libcurl4-openssl-dev
RUN apt-get install -y ruby-dev
RUN apt-get update
RUN gem install bundler
#RUN gem install rake -v '12.3.1'
#RUN gem install builder -v '3.2.3'
#RUN gem install rails --version "$RAILS_VERSION"

USER app


### Development
# RUN apt-get install -y libcurl4-openssl-dev
# RUN RAILS_ENV=${RAILS_ENV} bundle install --without production --with test development
RUN RAILS_ENV=${RAILS_ENV} bundle config --global jobs "$(($(getconf _NPROCESSORS_ONLN)*2))"
RUN RAILS_ENV=${RAILS_ENV} bundle install
RUN RAILS_ENV=${RAILS_ENV} bundle install --without production --with test development

USER root
## sidekiq

RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Expose Nginx HTTP service
#EXPOSE 80
EXPOSE 3000

# Use baseimage-docker's init process. (phusion/passenger-ruby)
# CMD ["/sbin/my_init"]
CMD [ "docker/start_server.sh 3000" ]

